<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>坂井泉水纪念网站</title>
  
  <subtitle>“ 私はいつも本当に、言葉を、詞を、大切にしてきました。音楽でそれが伝わればいいなと願っています ”</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-05-24T17:25:49.986Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Zard fans</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Forever Zard</title>
    <link href="http://example.com/2023/05/23/%E5%9D%82%E4%BA%95%E6%B3%89%E6%B0%B4%E7%BA%AA%E5%BF%B5/"/>
    <id>http://example.com/2023/05/23/%E5%9D%82%E4%BA%95%E6%B3%89%E6%B0%B4%E7%BA%AA%E5%BF%B5/</id>
    <published>2023-05-23T12:50:36.000Z</published>
    <updated>2023-05-24T17:25:49.986Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:30px; text-align:justify"">坂井泉水是90年代日本销量最高的女歌手，也是日本流行音乐的代表人物之一，她就像太阳一般闪耀，给予人们力量。虽然她已逝去，但是她的精神和音乐却仍能鼓舞人心 </p><p style="text-indent:30px; text-align:justify">1990年代席卷音乐界的ZARD主唱坂井泉水，2007年5月27日年仅40岁便离开人世，这已是多年以前的事情了。2014年年末，小田急线涩泽站（神奈川县秦野市）为了纪念与该市有渊源的坂井小姐，将ZARD的歌曲用作「车站音乐」，死后她的功绩仍未褪色。和「負けないで」「揺れる想い」等百万金曲连发的光辉业绩形成对比的，是极少在媒体上曝光的歌姬。让我们再次回顾一下她不为人所知的真实形象吧。</p><p>请参看bilibili相关视频：<br>    <a href="https://www.bilibili.com/video/BV1sV411i7Vk">NHK纪录片：永远的ZARD 坂井泉水名曲诞生的背后</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p style=&quot;text-indent:30px; text-align:justify&quot;&quot;&gt;坂井泉水是90年代日本销量最高的女歌手，也是日本流行音乐的代表人物之一，她就像太阳一般闪耀，给予人们力量。虽然她已逝去，但是她的精神和音乐却仍能鼓舞人心 &lt;/p&gt;

&lt;p style</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网站搭建技术记录</title>
    <link href="http://example.com/2023/05/22/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2023/05/22/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</id>
    <published>2023-05-22T04:55:10.000Z</published>
    <updated>2023-05-25T20:13:21.152Z</updated>
    
    <content type="html"><![CDATA[<p><em><strong>写在开头</strong></em></p><p>本博客的搭建旨在搜集和记录有关90年代初期出道的日本摇滚乐队Zard，以及其主唱坂井泉水（Izumi Sakai, 1967-2007）的相关信息。如果您来到了这里，不管是作为坂井泉水的粉丝，还是想要从零开始或是进一步了解这位歌手的普通人，希望这个网站都会为您带来新的收获。如果能因此对纪念坂井泉水和推广她的作品作出一点点微小的贡献，让更多人认识、了解和喜欢这位传奇歌手，笔者将感到不胜荣幸。</p><p>然而，万事开头难。在博客搭建初期，没有什么是一帆风顺的，甚至每一步都是举步维艰的。因此，作为本博客的第一篇文章，笔者认为非常有必要将一路走来所遇到的困难和所使用的解决办法尽可能翔实地记录下来。如此一来，不仅可以在今后遇到相关问题时有一个可查阅的手册，也可供有需要的读者进行参考。当然，作为个人搭建者，笔者水平实在有限。因此，如果有什么错误和纰漏，欢迎大家的留言和指正。</p><hr><h2 id="第一部分：使用Hexo-github搭建博客框架"><a href="#第一部分：使用Hexo-github搭建博客框架" class="headerlink" title="第一部分：使用Hexo+github搭建博客框架"></a>第一部分：使用Hexo+github搭建博客框架</h2><p>本节将会介绍如何使用Hexo工具搭建一个独立博客网站，并且通过在本地预览以进行错误排查，然后部署到github上成为一个真正可以外部访问的网站。</p><h3 id="准备工作：安装Node-js-Git"><a href="#准备工作：安装Node-js-Git" class="headerlink" title="准备工作：安装Node.js+Git"></a>准备工作：安装Node.js+Git</h3><p>Node.js 是一套 JavaScript 运行环境，用来支持 JavaScript 代码的执行，让其可以脱离浏览器，像其它编程语言一样直接在计算机上使用。当然，在本篇记录之中,它最主要的用作还是能够让Javascript对编写网页脚本进行支持。<strong>最新版本</strong>可前往<a href="https://nodejs.org/en/download">官网</a>进行下载。</p><p>然而，在下定决心要尝试搭建博客网站并搜索相关教程之后，笔者在第一步就被卡住了。原因：当下最新版本的Node.js（Node.js 20.xx.x）仅支持 windows 8 及更新的系统，笔者的 windows 7 已不在支持范围。好在一番搜索下来，终于发现 windows 7 系统可安装的最后一个版本为 node.js 13.xx.x，符合Hexo官方声明的版本要求，遂下载并且安装。这个过程基本选择默认安装选项即可，但是我自己手动将安装路径设置在了 D:\Program Files\nodejs\ 而不是C盘中，之后需要注意。</p><p>安装结束后，于命令行终端（win+R）依次输入以下命令：（其中的npm是Node.js的软件包管理器）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v </span><br></pre></td></tr></table></figure><p>若返回版本号，则安装成功，否则可能需要手动配置环境变量。有关环境变量，接下来在章节<a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%EF%BC%9A%E5%AE%89%E8%A3%85Git">安装Git</a>中会有涉及。</p><p>接下来一步比较需要注意，是在<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#!">crazyyuchi的教程</a>中所提到的，最好改变npm的内置路径，即全局模块路径和缓存路径。否则npm将默认会把模块安装在盘的用户AppData目录下，即：</p><p>npm包全局目录： C:\Users\[username]\AppData\Roaming\npm\node_modules</p><p>npm包全局目录： C:\Users\[username]\AppData\Roaming\npm</p><p>对于这一点，可以通过命令： <code>npm config list -l</code> （查看默认设置）进行验证。</p><p>要修改该设置，首先Node.js的安装位置，新建两个文件夹，node_global和node_cache，如我的是：</p><p>D:\Program Files\nodejs\node_global<br>D:\Program Files\nodejs\node_cache</p><p>然后执行命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix D:\Program Files\nodejs\node_global</span><br><span class="line"></span><br><span class="line">npm config <span class="built_in">set</span> cache D:\Program Files\nodejs\node_cache</span><br></pre></td></tr></table></figure><p>最后配置环境变量。右击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量，在用户变量的地方，找到path，点击编辑，在最后加入 D:\Program Files\nodejs\node_global 即可。</p><p>注意win 7 系统这里点击编辑过后所有的都出现在一排，需要小心点击输入正确的路径，并且注意在添加之前，上一个路径应该是以分号<code>;</code>结尾的，添加过后也因该在最后加上分号。</p><p>此时，若再次执行 <code>npm config list -l</code> 命令，会发现默认设置的prefix和cache路径后面会出现&lt;overridden&gt;字样。</p><p>最后安装Git，同样到<a href="https://git-scm.com/download/">官网</a>进行下载。一路默认即可，我将安装位置改为了D:\Program Files\Git。很遗憾，笔者没有弄清Git的具体含义和作用</p><p>安装结束后回到桌面，右键点击，如果在出现的栏目中有 “Git GUI Here” 和 “Git Bash Here”，或者在终端（win+R）中输入 <code>git -v</code> 出现版本信息，即代表成功。</p><h3 id="安装Hexo并创建博客"><a href="#安装Hexo并创建博客" class="headerlink" title="安装Hexo并创建博客"></a>安装Hexo并创建博客</h3><p>有了上面的准备工作，安装hexo就很容易了。首先找到你想要创建博客文件夹的地方，然后创建一个文件夹，如我的就命名为：personal_blog。之后所有的创建工作以及改动都会在这个文件夹之下进行。但是请注意，目前先不要点击进入文件夹。</p><p>例如，在D盘中创建文件夹personal_blog后，先留在D盘。然后鼠标右键，并点击Git Bash here。将会开启“MINGW64”窗口。显示目录为&#x2F;d。</p><p>现在，依次键入一下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 用于安装hexo框架</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"># 用于初始化文件夹</span><br><span class="line">hexo init &lt;新建文件夹的名称&gt;</span><br><span class="line"></span><br><span class="line"># 转到创建的文件夹中，注意这之后所有的操作就在博客所在的文件夹中了</span><br><span class="line"><span class="built_in">cd</span> &lt;新建文件夹的名称&gt;</span><br><span class="line"></span><br><span class="line"># hexo将会安装博客所需要的各种文件</span><br><span class="line">npm install </span><br></pre></td></tr></table></figure><p>如我的为：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">hexo ini personal_blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> personal_blog</span><br><span class="line"></span><br><span class="line"># 此后路径为E:\personal_blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>运行完成后，会发现personal_blog中多出了一些文件如source，scaffolds等，说明成功。</p><p>接下来，可以尝试创建第一篇文章。使用命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><p>其中[layout]（布局）为可选项，如果没有写，则Hexo默认为创建博文（post）。创建后，会在E:\personal_blog\source中产生一个新文件夹_post，其中会生成一个名为”title.md”的文本，这就是由Hexo自动生成的博文文件了。用编辑器打开文件后可以进行编辑，接受普通的markdown语法和HTML语法。在该md文件的最开头会有一些相关信息，如title，date等，并且可以按照相似格式加入其他参数，此时可以先暂时不进行修改，之后再对照Hexo官方文档进行详细设置。</p><p>最后依次输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>前者表示generator，指hexo将生成网页框架；后者为server，指部署本地进程。运行完成将会看到提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>此时将 “ <a href="http://localhost:4000/">http://localhost:4000/</a> “ 复制到浏览器打开即可看到生成的页面了。</p><h3 id="将生成的博客部署到github"><a href="#将生成的博客部署到github" class="headerlink" title="将生成的博客部署到github"></a>将生成的博客部署到github</h3><p>要将本地生成的网站部署到github，首先需要注册一个github帐号，步骤比较简单，不再赘述。之后进入github个人页面，点击右上角的“+”号，在下拉菜单中选择 “New repository” 来创建新仓库。注意，这个仓库将作为博客网站的接管仓库。</p><p>！！！ 注意，一定要使用<font color=red>用户名.github.io</font>为仓库命名 ！！！</p><p>如本博客网站仓库名为:qitongnihao.github.io，该名字也将作为之后可以让他人访问博客网站的网址。</p><p>将仓库建立好之后，打开本地电脑的博客存储文件夹（我的为E:\personal_blog\），右键点击Git Bash Here，打开命令行窗口通过如下命令安装github部署插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后通过ssh将本地目录与github关联起来。注意，笔者看到的第一份教程在这里演示的是直接使用仓库的https地址进行关联，具体情况在Bilibili网站<a href="https://www.bilibili.com/video/BV1Yb411a7ty">这个视频</a>18:30左右。很遗憾，这个方法在当前以不可使用，强行直接关联https的话Hexo会直接报错，提示用户2021年8月份之后这种身份认证方式已经不再被支持。因此在尝试数次之后，笔者终于还是使用了ssh的方式该。</p><p>方式其实也不复杂，具体操作如下。首先在命令行继续输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;github注册邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>之后对于弹出的选项移植输入回车，直到在C:&#x2F;Users&#x2F;[username]目录下找到名为.ssh的文件夹。文件夹内会有两个文件，一个id_rsa.pub，另一个为id_rsa，用文本编辑器打开id_rsa.pub，复制里面的的内容。然后打开Github，点击右上角的头像 Settings 选择 SSH and GPG keys，并点击 New SSH key 将之前复制的内容粘帖到Key的框中。然后回到之前的命令行窗口中，输入：（注意，下面这个不是你的右键地址，需要一字不差直接输入）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>点击回车，然后会出现一个询问内容。输入yes，回车，会出现一段内容，Hi ! You’ve successfully authenticated, but ****** doesnot provide shell access.。 说明连接成功。其中******是github的用户名。</p><p>最后在博客文件夹（我的为我的为E:\personal_blog\）中找到_config.yml文件，并用文本编辑器打开，拉到最后一行，会发现有一个deploy选项。在deploy下面添加一个repo项 ，一个branch项。修改成如下内容，注意每一行的冒号<code>:</code>都有一个空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: git@github.com:github用户名/github用户名.github.io.git  #或者复制github仓库的ssh        </span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>最后一步，使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>来依次完成网站生成和将网站从本地部署到github的工作。</p><p>ps：笔者是第一次使用github，不熟悉这种工作流。实际上，完成上述步骤后，打开github页面，在相应的repository中将会看到其中写了共有两个分支（branch）（因为我在建立仓库之初就尝试写了一个html格式的Hello world文件向想看看效果），一个为main，一个为master。此时，需要将master这个branch后面那个绿色的New pull request点开，然后依次找到Create request和Merge，从而将master分支（也即新写好的分支）融合（merge）进入主分支，这样github才会跟新这个仓库，然后一直等到仓库名字后面那个褐色圆点转动直到变成绿色小勾，才完成了整个网站部署工作，可以打开新网页，输入网址进行查看了。到此博客搭建第一阶段正式完成。</p><p>Fin</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;写在开头&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;本博客的搭建旨在搜集和记录有关90年代初期出道的日本摇滚乐队Zard，以及其主唱坂井泉水（Izumi Sakai, 1967-2007）的相关信息。如果您来到了这里，不管是作为坂井泉水的粉丝，还是想</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="github" scheme="http://example.com/tags/github/"/>
    
    <category term="Butterfly" scheme="http://example.com/tags/Butterfly/"/>
    
  </entry>
  
</feed>
